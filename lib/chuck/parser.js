/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Program":3,"ProgramSectionList":4,"ProgramSection":5,"StatementList":6,"FunctionDefinition":7,"Statement":8,"ExpressionStatement":9,"LoopStatement":10,"JumpStatement":11,"CodeSegment":12,"SEMICOLON":13,"Expression":14,"ChuckExpression":15,"COMMA":16,"ArrowExpression":17,"ChuckOperator":18,"DeclExpression":19,"ConditionalExpression":20,"TypeDecl":21,"VarDeclList":22,"VarDecl":23,"ID":24,"ArrayExpression":25,"ArrayEmpty":26,"Literal":27,"NULL":28,"TypeDeclA":29,"TypeDeclB":30,"AT_SYM":31,"LT":32,"IdDot":33,"GT":34,"TypeDecl2":35,"LogicalOrExpression":36,"LogicalAndExpression":37,"InclusiveOrExpression":38,"ExclusiveOrExpression":39,"AndExpression":40,"EqualityExpression":41,"RelationalExpression":42,"ShiftExpression":43,"AdditiveExpression":44,"MultiplicativeExpression":45,"PLUS":46,"MINUS":47,"TildaExpression":48,"TIMES":49,"DIVIDE":50,"CastExpression":51,"UnaryExpression":52,"DurExpression":53,"PLUSPLUS":54,"PostfixExpression":55,"COLONCOLON":56,"PrimaryExpression":57,"LPAREN":58,"RPAREN":59,"DOT":60,"NUMBER":61,"FLOAT":62,"STRING_LIT":63,"L_HACK":64,"R_HACK":65,"WHILE":66,"FOR":67,"LBRACE":68,"RBRACE":69,"BREAK":70,"LBRACK":71,"RBRACK":72,"CHUCK":73,"AT_CHUCK":74,"PLUS_CHUCK":75,"MINUS_CHUCK":76,"UNCHUCK":77,"FunctionDeclaration":78,"StaticDecl":79,"ArgList":80,"FUNCTION":81,"$accept":0,"$end":1},
terminals_: {2:"error",13:"SEMICOLON",16:"COMMA",24:"ID",28:"NULL",31:"AT_SYM",32:"LT",34:"GT",46:"PLUS",47:"MINUS",49:"TIMES",50:"DIVIDE",54:"PLUSPLUS",56:"COLONCOLON",58:"LPAREN",59:"RPAREN",60:"DOT",61:"NUMBER",62:"FLOAT",63:"STRING_LIT",64:"L_HACK",65:"R_HACK",66:"WHILE",67:"FOR",68:"LBRACE",69:"RBRACE",70:"BREAK",71:"LBRACK",72:"RBRACK",73:"CHUCK",74:"AT_CHUCK",75:"PLUS_CHUCK",76:"MINUS_CHUCK",77:"UNCHUCK",81:"FUNCTION"},
productions_: [0,[3,1],[4,1],[4,2],[5,1],[5,1],[6,1],[6,2],[8,1],[8,1],[8,1],[8,1],[9,1],[9,2],[14,1],[14,3],[15,1],[15,3],[17,1],[19,1],[19,2],[22,1],[23,1],[23,2],[23,2],[27,1],[21,1],[21,1],[29,1],[29,2],[30,3],[30,4],[35,1],[20,1],[36,1],[37,1],[38,1],[39,1],[40,1],[41,1],[42,1],[42,3],[42,3],[43,1],[44,1],[44,3],[44,3],[45,1],[45,3],[45,3],[48,1],[51,1],[52,1],[52,2],[53,1],[53,3],[55,1],[55,2],[55,4],[55,3],[55,3],[55,2],[57,1],[57,1],[57,1],[57,1],[57,3],[57,3],[57,1],[10,5],[10,7],[12,2],[12,3],[11,2],[33,1],[33,3],[25,3],[26,2],[18,1],[18,1],[18,1],[18,1],[18,1],[7,8],[7,7],[80,2],[80,4],[78,1],[79,0]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:return this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.Program($$[$0]));
break;
case 2:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])([$$[$0]]);
break;
case 3:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])([$$[$0-1]].concat($$[$0]));
break;
case 4:this.$ = $$[$0];
break;
case 5:this.$ = $$[$0];
break;
case 6:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])([$$[$0]]);
break;
case 7:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])([$$[$0-1]].concat($$[$0]));
break;
case 8:this.$ = $$[$0];
break;
case 9:this.$ = $$[$0];
break;
case 10:this.$ = $$[$0];
break;
case 11:this.$ = $$[$0];
break;
case 12:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(void 0);
break;
case 13:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.ExpressionStatement($$[$0-1]));
break;
case 14:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.ExpressionList($$[$0]));
break;
case 15:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])($$[$0].prepend($$[$0-2]));
break;
case 16:this.$ = $$[$0];
break;
case 17:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.BinaryExpression($$[$0-2], $$[$0-1], $$[$0]));
break;
case 18:this.$ = $$[$0];
break;
case 19:this.$ = $$[$0];
break;
case 20:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.DeclarationExpression($$[$0-1], $$[$0], 0));
break;
case 21:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])([$$[$0]]);
break;
case 22:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.VariableDeclaration($$[$0]));
break;
case 23:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.VariableDeclaration($$[$0-1], $$[$0]));
break;
case 24:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.VariableDeclaration($$[$0-1], $$[$0]));
break;
case 25:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.Null);
break;
case 26:this.$ = $$[$0];
break;
case 27:this.$ = $$[$0];
break;
case 28:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.TypeDeclaration($$[$0], 0));
break;
case 29:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.TypeDeclaration($$[$0-1], 1));
break;
case 30:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.TypeDeclaration($$[$0-1], 0));
break;
case 31:this.$ = yy.addLocationDataFn(_$[$0-3], _$[$0])(new yy.TypeDeclaration($$[$0-2], 1));
break;
case 32:this.$ = $$[$0];
break;
case 33:this.$ = $$[$0];
break;
case 34:this.$ = $$[$0];
break;
case 35:this.$ = $$[$0];
break;
case 36:this.$ = $$[$0];
break;
case 37:this.$ = $$[$0];
break;
case 38:this.$ = $$[$0];
break;
case 39:this.$ = $$[$0];
break;
case 40:this.$ = $$[$0];
break;
case 41:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.BinaryExpression($$[$0-2], new yy.LtOperator(), $$[$0]));
break;
case 42:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.BinaryExpression($$[$0-2], new yy.GtOperator(), $$[$0]));
break;
case 43:this.$ = $$[$0];
break;
case 44:this.$ = $$[$0];
break;
case 45:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.BinaryExpression($$[$0-2], new yy.PlusOperator(), $$[$0]));
break;
case 46:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.BinaryExpression($$[$0-2], new yy.MinusOperator(), $$[$0]));
break;
case 47:this.$ = $$[$0];
break;
case 48:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.BinaryExpression($$[$0-2], new yy.TimesOperator(), $$[$0]));
break;
case 49:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.BinaryExpression($$[$0-2], new yy.DivideOperator(), $$[$0]));
break;
case 50:this.$ = $$[$0];
break;
case 51:this.$ = $$[$0];
break;
case 52:this.$ = $$[$0];
break;
case 53:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.UnaryExpression(new yy.PrefixPlusPlusOperator(), $$[$0]));
break;
case 54:this.$ = $$[$0];
break;
case 55:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.DurExpression($$[$0-2], $$[$0]));
break;
case 56:this.$ = $$[$0];
break;
case 57:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.ArrayExpression($$[$0-1], $$[$0]));
break;
case 58:this.$ = yy.addLocationDataFn(_$[$0-3], _$[$0])(new yy.FuncCallExpression($$[$0-3], $$[$0-1]));
break;
case 59:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.FuncCallExpression($$[$0-2]));
break;
case 60:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.DotMemberExpression($$[$0-2], $$[$0]));
break;
case 61:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.PostfixExpression($$[$0-1], new yy.PostfixPlusPlusOperator()));
break;
case 62:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.PrimaryVariableExpression($$[$0]));
break;
case 63:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.PrimaryIntExpression($$[$0]));
break;
case 64:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.PrimaryFloatExpression($$[$0]));
break;
case 65:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.PrimaryStringExpression($$[$0]));
break;
case 66:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.PrimaryHackExpression($$[$0-1]));
break;
case 67:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])($$[$0-1]);
break;
case 68:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.PrimaryArrayExpression($$[$0]));
break;
case 69:this.$ = yy.addLocationDataFn(_$[$0-4], _$[$0])(new yy.WhileStatement($$[$0-2], $$[$0]));
break;
case 70:this.$ = yy.addLocationDataFn(_$[$0-6], _$[$0])(new yy.ForStatement($$[$0-4], $$[$0-3], $$[$0-2], $$[$0]));
break;
case 71:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.CodeStatement());
break;
case 72:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.CodeStatement($$[$0-1]));
break;
case 73:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.BreakStatement());
break;
case 74:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])([$$[$0]]);
break;
case 75:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])($$[$0].push($$[$0-2]));
break;
case 76:this.$ = yy.addLocationDataFn(_$[$0-2], _$[$0])(new yy.ArraySub($$[$0-1]));
break;
case 77:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])(new yy.ArraySub());
break;
case 78:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.ChuckOperator());
break;
case 79:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.AtChuckOperator());
break;
case 80:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.PlusChuckOperator());
break;
case 81:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.MinusChuckOperator());
break;
case 82:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])(new yy.UnchuckOperator());
break;
case 83:this.$ = yy.addLocationDataFn(_$[$0-7], _$[$0])(new yy.FunctionDefinition($$[$0-7], $$[$0-6], $$[$0-5], $$[$0-4], $$[$0-2], $$[$0]));
break;
case 84:this.$ = yy.addLocationDataFn(_$[$0-6], _$[$0])(new yy.FunctionDefinition($$[$0-6], $$[$0-5], $$[$0-4], $$[$0-3], [], $$[$0]));
break;
case 85:this.$ = yy.addLocationDataFn(_$[$0-1], _$[$0])([new yy.Arg($$[$0-1], $$[$0])]);
break;
case 86:this.$ = yy.addLocationDataFn(_$[$0-3], _$[$0])([new yy.Arg($$[$0-3], $$[$0-2])].concat($$[$0]));
break;
case 87:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])((function () {}()));
break;
case 88:this.$ = yy.addLocationDataFn(_$[$0], _$[$0])((function () {}()));
break;
}
},
table: [{3:1,4:2,5:3,6:4,7:5,8:6,9:8,10:9,11:10,12:11,13:[1,13],14:14,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],66:[1,15],67:[1,16],68:[1,18],70:[1,17],71:[1,51],78:7,81:[1,12]},{1:[3]},{1:[2,1]},{1:[2,2],4:52,5:3,6:4,7:5,8:6,9:8,10:9,11:10,12:11,13:[1,13],14:14,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],66:[1,15],67:[1,16],68:[1,18],70:[1,17],71:[1,51],78:7,81:[1,12]},{1:[2,4],13:[2,4],24:[2,4],32:[2,4],54:[2,4],58:[2,4],61:[2,4],62:[2,4],63:[2,4],64:[2,4],66:[2,4],67:[2,4],68:[2,4],70:[2,4],71:[2,4],81:[2,4]},{1:[2,5],13:[2,5],24:[2,5],32:[2,5],54:[2,5],58:[2,5],61:[2,5],62:[2,5],63:[2,5],64:[2,5],66:[2,5],67:[2,5],68:[2,5],70:[2,5],71:[2,5],81:[2,5]},{1:[2,6],6:53,8:6,9:8,10:9,11:10,12:11,13:[1,13],14:14,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],66:[1,15],67:[1,16],68:[1,18],69:[2,6],70:[1,17],71:[1,51],81:[2,6]},{24:[2,88],32:[2,88],79:54},{1:[2,8],13:[2,8],24:[2,8],32:[2,8],54:[2,8],58:[2,8],61:[2,8],62:[2,8],63:[2,8],64:[2,8],66:[2,8],67:[2,8],68:[2,8],69:[2,8],70:[2,8],71:[2,8],81:[2,8]},{1:[2,9],13:[2,9],24:[2,9],32:[2,9],54:[2,9],58:[2,9],61:[2,9],62:[2,9],63:[2,9],64:[2,9],66:[2,9],67:[2,9],68:[2,9],69:[2,9],70:[2,9],71:[2,9],81:[2,9]},{1:[2,10],13:[2,10],24:[2,10],32:[2,10],54:[2,10],58:[2,10],61:[2,10],62:[2,10],63:[2,10],64:[2,10],66:[2,10],67:[2,10],68:[2,10],69:[2,10],70:[2,10],71:[2,10],81:[2,10]},{1:[2,11],13:[2,11],24:[2,11],32:[2,11],54:[2,11],58:[2,11],61:[2,11],62:[2,11],63:[2,11],64:[2,11],66:[2,11],67:[2,11],68:[2,11],69:[2,11],70:[2,11],71:[2,11],81:[2,11]},{24:[2,87],32:[2,87]},{1:[2,12],13:[2,12],24:[2,12],32:[2,12],54:[2,12],58:[2,12],61:[2,12],62:[2,12],63:[2,12],64:[2,12],66:[2,12],67:[2,12],68:[2,12],69:[2,12],70:[2,12],71:[2,12],81:[2,12]},{13:[1,55]},{58:[1,56]},{58:[1,57]},{13:[1,58]},{6:60,8:6,9:8,10:9,11:10,12:11,13:[1,13],14:14,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],66:[1,15],67:[1,16],68:[1,18],69:[1,59],70:[1,17],71:[1,51]},{13:[2,14],16:[1,61],18:62,59:[2,14],65:[2,14],72:[2,14],73:[1,63],74:[1,64],75:[1,65],76:[1,66],77:[1,67]},{13:[2,16],16:[2,16],59:[2,16],65:[2,16],72:[2,16],73:[2,16],74:[2,16],75:[2,16],76:[2,16],77:[2,16]},{13:[2,18],16:[2,18],59:[2,18],65:[2,18],72:[2,18],73:[2,18],74:[2,18],75:[2,18],76:[2,18],77:[2,18]},{13:[2,19],16:[2,19],59:[2,19],65:[2,19],72:[2,19],73:[2,19],74:[2,19],75:[2,19],76:[2,19],77:[2,19]},{22:68,23:69,24:[1,70]},{13:[2,33],16:[2,33],59:[2,33],65:[2,33],72:[2,33],73:[2,33],74:[2,33],75:[2,33],76:[2,33],77:[2,33]},{24:[2,26]},{24:[2,27]},{13:[2,34],16:[2,34],59:[2,34],65:[2,34],72:[2,34],73:[2,34],74:[2,34],75:[2,34],76:[2,34],77:[2,34]},{13:[2,62],16:[2,62],24:[2,28],31:[1,71],32:[2,62],34:[2,62],46:[2,62],47:[2,62],49:[2,62],50:[2,62],54:[2,62],56:[2,62],58:[2,62],59:[2,62],60:[2,62],65:[2,62],71:[2,62],72:[2,62],73:[2,62],74:[2,62],75:[2,62],76:[2,62],77:[2,62]},{24:[1,73],33:72},{13:[2,35],16:[2,35],59:[2,35],65:[2,35],72:[2,35],73:[2,35],74:[2,35],75:[2,35],76:[2,35],77:[2,35]},{13:[2,36],16:[2,36],59:[2,36],65:[2,36],72:[2,36],73:[2,36],74:[2,36],75:[2,36],76:[2,36],77:[2,36]},{13:[2,37],16:[2,37],59:[2,37],65:[2,37],72:[2,37],73:[2,37],74:[2,37],75:[2,37],76:[2,37],77:[2,37]},{13:[2,38],16:[2,38],59:[2,38],65:[2,38],72:[2,38],73:[2,38],74:[2,38],75:[2,38],76:[2,38],77:[2,38]},{13:[2,39],16:[2,39],32:[1,74],34:[1,75],59:[2,39],65:[2,39],72:[2,39],73:[2,39],74:[2,39],75:[2,39],76:[2,39],77:[2,39]},{13:[2,40],16:[2,40],32:[2,40],34:[2,40],59:[2,40],65:[2,40],72:[2,40],73:[2,40],74:[2,40],75:[2,40],76:[2,40],77:[2,40]},{13:[2,43],16:[2,43],32:[2,43],34:[2,43],46:[1,76],47:[1,77],59:[2,43],65:[2,43],72:[2,43],73:[2,43],74:[2,43],75:[2,43],76:[2,43],77:[2,43]},{13:[2,44],16:[2,44],32:[2,44],34:[2,44],46:[2,44],47:[2,44],49:[1,78],50:[1,79],59:[2,44],65:[2,44],72:[2,44],73:[2,44],74:[2,44],75:[2,44],76:[2,44],77:[2,44]},{13:[2,47],16:[2,47],32:[2,47],34:[2,47],46:[2,47],47:[2,47],49:[2,47],50:[2,47],59:[2,47],65:[2,47],72:[2,47],73:[2,47],74:[2,47],75:[2,47],76:[2,47],77:[2,47]},{13:[2,50],16:[2,50],32:[2,50],34:[2,50],46:[2,50],47:[2,50],49:[2,50],50:[2,50],59:[2,50],65:[2,50],72:[2,50],73:[2,50],74:[2,50],75:[2,50],76:[2,50],77:[2,50]},{13:[2,51],16:[2,51],32:[2,51],34:[2,51],46:[2,51],47:[2,51],49:[2,51],50:[2,51],59:[2,51],65:[2,51],72:[2,51],73:[2,51],74:[2,51],75:[2,51],76:[2,51],77:[2,51]},{13:[2,52],16:[2,52],32:[2,52],34:[2,52],46:[2,52],47:[2,52],49:[2,52],50:[2,52],56:[1,80],59:[2,52],65:[2,52],72:[2,52],73:[2,52],74:[2,52],75:[2,52],76:[2,52],77:[2,52]},{24:[1,82],25:50,52:81,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{13:[2,54],16:[2,54],25:83,32:[2,54],34:[2,54],46:[2,54],47:[2,54],49:[2,54],50:[2,54],54:[1,86],56:[2,54],58:[1,84],59:[2,54],60:[1,85],65:[2,54],71:[1,51],72:[2,54],73:[2,54],74:[2,54],75:[2,54],76:[2,54],77:[2,54]},{13:[2,56],16:[2,56],32:[2,56],34:[2,56],46:[2,56],47:[2,56],49:[2,56],50:[2,56],54:[2,56],56:[2,56],58:[2,56],59:[2,56],60:[2,56],65:[2,56],71:[2,56],72:[2,56],73:[2,56],74:[2,56],75:[2,56],76:[2,56],77:[2,56]},{13:[2,63],16:[2,63],32:[2,63],34:[2,63],46:[2,63],47:[2,63],49:[2,63],50:[2,63],54:[2,63],56:[2,63],58:[2,63],59:[2,63],60:[2,63],65:[2,63],71:[2,63],72:[2,63],73:[2,63],74:[2,63],75:[2,63],76:[2,63],77:[2,63]},{13:[2,64],16:[2,64],32:[2,64],34:[2,64],46:[2,64],47:[2,64],49:[2,64],50:[2,64],54:[2,64],56:[2,64],58:[2,64],59:[2,64],60:[2,64],65:[2,64],71:[2,64],72:[2,64],73:[2,64],74:[2,64],75:[2,64],76:[2,64],77:[2,64]},{13:[2,65],16:[2,65],32:[2,65],34:[2,65],46:[2,65],47:[2,65],49:[2,65],50:[2,65],54:[2,65],56:[2,65],58:[2,65],59:[2,65],60:[2,65],65:[2,65],71:[2,65],72:[2,65],73:[2,65],74:[2,65],75:[2,65],76:[2,65],77:[2,65]},{14:87,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{14:88,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{13:[2,68],16:[2,68],32:[2,68],34:[2,68],46:[2,68],47:[2,68],49:[2,68],50:[2,68],54:[2,68],56:[2,68],58:[2,68],59:[2,68],60:[2,68],65:[2,68],71:[2,68],72:[2,68],73:[2,68],74:[2,68],75:[2,68],76:[2,68],77:[2,68]},{14:89,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{1:[2,3]},{1:[2,7],13:[2,7],24:[2,7],32:[2,7],54:[2,7],58:[2,7],61:[2,7],62:[2,7],63:[2,7],64:[2,7],66:[2,7],67:[2,7],68:[2,7],69:[2,7],70:[2,7],71:[2,7],81:[2,7]},{21:91,24:[1,92],29:25,30:26,32:[1,29],35:90},{1:[2,13],13:[2,13],24:[2,13],32:[2,13],54:[2,13],58:[2,13],61:[2,13],62:[2,13],63:[2,13],64:[2,13],66:[2,13],67:[2,13],68:[2,13],69:[2,13],70:[2,13],71:[2,13],81:[2,13]},{14:93,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{9:94,13:[1,13],14:14,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{1:[2,73],13:[2,73],24:[2,73],32:[2,73],54:[2,73],58:[2,73],61:[2,73],62:[2,73],63:[2,73],64:[2,73],66:[2,73],67:[2,73],68:[2,73],69:[2,73],70:[2,73],71:[2,73],81:[2,73]},{1:[2,71],13:[2,71],24:[2,71],32:[2,71],54:[2,71],58:[2,71],61:[2,71],62:[2,71],63:[2,71],64:[2,71],66:[2,71],67:[2,71],68:[2,71],69:[2,71],70:[2,71],71:[2,71],81:[2,71]},{69:[1,95]},{14:96,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{17:97,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{24:[2,78],32:[2,78],54:[2,78],58:[2,78],61:[2,78],62:[2,78],63:[2,78],64:[2,78],71:[2,78]},{24:[2,79],32:[2,79],54:[2,79],58:[2,79],61:[2,79],62:[2,79],63:[2,79],64:[2,79],71:[2,79]},{24:[2,80],32:[2,80],54:[2,80],58:[2,80],61:[2,80],62:[2,80],63:[2,80],64:[2,80],71:[2,80]},{24:[2,81],32:[2,81],54:[2,81],58:[2,81],61:[2,81],62:[2,81],63:[2,81],64:[2,81],71:[2,81]},{24:[2,82],32:[2,82],54:[2,82],58:[2,82],61:[2,82],62:[2,82],63:[2,82],64:[2,82],71:[2,82]},{13:[2,20],16:[2,20],59:[2,20],65:[2,20],72:[2,20],73:[2,20],74:[2,20],75:[2,20],76:[2,20],77:[2,20]},{13:[2,21],16:[2,21],59:[2,21],65:[2,21],72:[2,21],73:[2,21],74:[2,21],75:[2,21],76:[2,21],77:[2,21]},{13:[2,22],16:[2,22],25:98,26:99,59:[2,22],65:[2,22],71:[1,100],72:[2,22],73:[2,22],74:[2,22],75:[2,22],76:[2,22],77:[2,22]},{24:[2,29]},{34:[1,101]},{34:[2,74],60:[1,102]},{24:[1,82],25:50,43:103,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{24:[1,82],25:50,43:104,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{24:[1,82],25:50,45:105,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{24:[1,82],25:50,45:106,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{24:[1,82],25:50,48:107,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{24:[1,82],25:50,48:108,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{24:[1,82],25:50,55:109,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{13:[2,53],16:[2,53],32:[2,53],34:[2,53],46:[2,53],47:[2,53],49:[2,53],50:[2,53],59:[2,53],65:[2,53],72:[2,53],73:[2,53],74:[2,53],75:[2,53],76:[2,53],77:[2,53]},{13:[2,62],16:[2,62],32:[2,62],34:[2,62],46:[2,62],47:[2,62],49:[2,62],50:[2,62],54:[2,62],56:[2,62],58:[2,62],59:[2,62],60:[2,62],65:[2,62],71:[2,62],72:[2,62],73:[2,62],74:[2,62],75:[2,62],76:[2,62],77:[2,62]},{13:[2,57],16:[2,57],32:[2,57],34:[2,57],46:[2,57],47:[2,57],49:[2,57],50:[2,57],54:[2,57],56:[2,57],58:[2,57],59:[2,57],60:[2,57],65:[2,57],71:[2,57],72:[2,57],73:[2,57],74:[2,57],75:[2,57],76:[2,57],77:[2,57]},{14:110,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],59:[1,111],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{24:[1,112]},{13:[2,61],16:[2,61],32:[2,61],34:[2,61],46:[2,61],47:[2,61],49:[2,61],50:[2,61],54:[2,61],56:[2,61],58:[2,61],59:[2,61],60:[2,61],65:[2,61],71:[2,61],72:[2,61],73:[2,61],74:[2,61],75:[2,61],76:[2,61],77:[2,61]},{65:[1,113]},{59:[1,114]},{72:[1,115]},{24:[1,116]},{24:[2,32]},{24:[2,28],31:[1,71]},{59:[1,117]},{9:118,13:[1,13],14:14,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{1:[2,72],13:[2,72],24:[2,72],32:[2,72],54:[2,72],58:[2,72],61:[2,72],62:[2,72],63:[2,72],64:[2,72],66:[2,72],67:[2,72],68:[2,72],69:[2,72],70:[2,72],71:[2,72],81:[2,72]},{13:[2,15],59:[2,15],65:[2,15],72:[2,15]},{13:[2,17],16:[2,17],59:[2,17],65:[2,17],72:[2,17],73:[2,17],74:[2,17],75:[2,17],76:[2,17],77:[2,17]},{13:[2,23],16:[2,23],59:[2,23],65:[2,23],72:[2,23],73:[2,23],74:[2,23],75:[2,23],76:[2,23],77:[2,23]},{13:[2,24],16:[2,24],59:[2,24],65:[2,24],72:[2,24],73:[2,24],74:[2,24],75:[2,24],76:[2,24],77:[2,24]},{14:89,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51],72:[1,119]},{24:[2,30],31:[1,120]},{24:[1,73],33:121},{13:[2,41],16:[2,41],32:[2,41],34:[2,41],59:[2,41],65:[2,41],72:[2,41],73:[2,41],74:[2,41],75:[2,41],76:[2,41],77:[2,41]},{13:[2,42],16:[2,42],32:[2,42],34:[2,42],59:[2,42],65:[2,42],72:[2,42],73:[2,42],74:[2,42],75:[2,42],76:[2,42],77:[2,42]},{13:[2,45],16:[2,45],32:[2,45],34:[2,45],46:[2,45],47:[2,45],49:[1,78],50:[1,79],59:[2,45],65:[2,45],72:[2,45],73:[2,45],74:[2,45],75:[2,45],76:[2,45],77:[2,45]},{13:[2,46],16:[2,46],32:[2,46],34:[2,46],46:[2,46],47:[2,46],49:[1,78],50:[1,79],59:[2,46],65:[2,46],72:[2,46],73:[2,46],74:[2,46],75:[2,46],76:[2,46],77:[2,46]},{13:[2,48],16:[2,48],32:[2,48],34:[2,48],46:[2,48],47:[2,48],49:[2,48],50:[2,48],59:[2,48],65:[2,48],72:[2,48],73:[2,48],74:[2,48],75:[2,48],76:[2,48],77:[2,48]},{13:[2,49],16:[2,49],32:[2,49],34:[2,49],46:[2,49],47:[2,49],49:[2,49],50:[2,49],59:[2,49],65:[2,49],72:[2,49],73:[2,49],74:[2,49],75:[2,49],76:[2,49],77:[2,49]},{13:[2,55],16:[2,55],25:83,32:[2,55],34:[2,55],46:[2,55],47:[2,55],49:[2,55],50:[2,55],54:[1,86],56:[2,55],58:[1,84],59:[2,55],60:[1,85],65:[2,55],71:[1,51],72:[2,55],73:[2,55],74:[2,55],75:[2,55],76:[2,55],77:[2,55]},{59:[1,122]},{13:[2,59],16:[2,59],32:[2,59],34:[2,59],46:[2,59],47:[2,59],49:[2,59],50:[2,59],54:[2,59],56:[2,59],58:[2,59],59:[2,59],60:[2,59],65:[2,59],71:[2,59],72:[2,59],73:[2,59],74:[2,59],75:[2,59],76:[2,59],77:[2,59]},{13:[2,60],16:[2,60],32:[2,60],34:[2,60],46:[2,60],47:[2,60],49:[2,60],50:[2,60],54:[2,60],56:[2,60],58:[2,60],59:[2,60],60:[2,60],65:[2,60],71:[2,60],72:[2,60],73:[2,60],74:[2,60],75:[2,60],76:[2,60],77:[2,60]},{13:[2,66],16:[2,66],32:[2,66],34:[2,66],46:[2,66],47:[2,66],49:[2,66],50:[2,66],54:[2,66],56:[2,66],58:[2,66],59:[2,66],60:[2,66],65:[2,66],71:[2,66],72:[2,66],73:[2,66],74:[2,66],75:[2,66],76:[2,66],77:[2,66]},{13:[2,67],16:[2,67],32:[2,67],34:[2,67],46:[2,67],47:[2,67],49:[2,67],50:[2,67],54:[2,67],56:[2,67],58:[2,67],59:[2,67],60:[2,67],65:[2,67],71:[2,67],72:[2,67],73:[2,67],74:[2,67],75:[2,67],76:[2,67],77:[2,67]},{13:[2,76],16:[2,76],32:[2,76],34:[2,76],46:[2,76],47:[2,76],49:[2,76],50:[2,76],54:[2,76],56:[2,76],58:[2,76],59:[2,76],60:[2,76],65:[2,76],71:[2,76],72:[2,76],73:[2,76],74:[2,76],75:[2,76],76:[2,76],77:[2,76]},{58:[1,123]},{8:124,9:8,10:9,11:10,12:11,13:[1,13],14:14,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],66:[1,15],67:[1,16],68:[1,18],70:[1,17],71:[1,51]},{14:125,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],71:[1,51]},{13:[2,77],16:[2,77],59:[2,77],65:[2,77],72:[2,77],73:[2,77],74:[2,77],75:[2,77],76:[2,77],77:[2,77]},{24:[2,31]},{34:[2,75]},{13:[2,58],16:[2,58],32:[2,58],34:[2,58],46:[2,58],47:[2,58],49:[2,58],50:[2,58],54:[2,58],56:[2,58],58:[2,58],59:[2,58],60:[2,58],65:[2,58],71:[2,58],72:[2,58],73:[2,58],74:[2,58],75:[2,58],76:[2,58],77:[2,58]},{21:128,24:[1,92],29:25,30:26,32:[1,29],59:[1,127],80:126},{1:[2,69],13:[2,69],24:[2,69],32:[2,69],54:[2,69],58:[2,69],61:[2,69],62:[2,69],63:[2,69],64:[2,69],66:[2,69],67:[2,69],68:[2,69],69:[2,69],70:[2,69],71:[2,69],81:[2,69]},{59:[1,129]},{59:[1,130]},{12:131,68:[1,18]},{23:132,24:[1,70]},{8:133,9:8,10:9,11:10,12:11,13:[1,13],14:14,15:19,17:20,19:21,20:22,21:23,24:[1,28],25:50,29:25,30:26,32:[1,29],36:24,37:27,38:30,39:31,40:32,41:33,42:34,43:35,44:36,45:37,48:38,51:39,52:40,53:41,54:[1,42],55:43,57:44,58:[1,49],61:[1,45],62:[1,46],63:[1,47],64:[1,48],66:[1,15],67:[1,16],68:[1,18],70:[1,17],71:[1,51]},{12:134,68:[1,18]},{1:[2,84],13:[2,84],24:[2,84],32:[2,84],54:[2,84],58:[2,84],61:[2,84],62:[2,84],63:[2,84],64:[2,84],66:[2,84],67:[2,84],68:[2,84],70:[2,84],71:[2,84],81:[2,84]},{16:[1,135],59:[2,85]},{1:[2,70],13:[2,70],24:[2,70],32:[2,70],54:[2,70],58:[2,70],61:[2,70],62:[2,70],63:[2,70],64:[2,70],66:[2,70],67:[2,70],68:[2,70],69:[2,70],70:[2,70],71:[2,70],81:[2,70]},{1:[2,83],13:[2,83],24:[2,83],32:[2,83],54:[2,83],58:[2,83],61:[2,83],62:[2,83],63:[2,83],64:[2,83],66:[2,83],67:[2,83],68:[2,83],70:[2,83],71:[2,83],81:[2,83]},{21:128,24:[1,92],29:25,30:26,32:[1,29],80:136},{59:[2,86]}],
defaultActions: {2:[2,1],25:[2,26],26:[2,27],52:[2,3],71:[2,29],91:[2,32],120:[2,31],121:[2,75],136:[2,86]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}
window.ChuckParser = parser.Parser;
